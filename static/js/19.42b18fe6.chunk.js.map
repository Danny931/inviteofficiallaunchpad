{"version":3,"sources":["components/common/Inputs/index.tsx","components/common/Tabs/TabSelector.tsx","components/common/Tabs/index.tsx","components/layout/NoData/index.tsx","components/layout/LaunchComponent/LaunchpadFilter.tsx","components/common/Pagination/paginator.js","components/common/Pagination/index.tsx","pages/Dashboard/LaunchPad/Lists/index.tsx"],"names":["Input","styled","input","attrs","className","props","theme","colors","primaryText","primaryBlue","TextArea","textarea","rows","Label","label","InputContainer","div","style","InputError","InputHint","TabSelectorButton","isActive","primaryRed","TabSelector","children","onClick","useTabs","tabs","defaultTab","state","React","selectedTab","setSelectedTab","previousActiveIndex","value","ref","current","usePrevious","indexOf","length","includes","undefined","TabPanel","render","shouldRender","setShouldRender","hidden","NoData","FilterItem","button","LaunchpadFilter","onSelect","selected","Paginator","perPage","this","prototype","build","totalResultsValue","currentPageValue","totalResults","parseInt","currentPage","totalPages","Math","ceil","firstPage","max","floor","lastPage","min","firstResult","lastResult","pages","previousPage","nextPage","hasPreviousPage","hasNextPage","results","PageLinks","createPageNumbers","start","end","i","push","Pagination","totalItems","onPageClick","useEffect","window","scrollTo","top","behavior","classNames","disabled","page","type","map","LaunchpadLists","useState","filterOption","setFilterOption","paginatedList","setPaginatedList","setCurrentPage","itemsPerPage","lists","slice","Card","to","placeholder","option","list","id","LaunchPadCard"],"mappings":"iWAOaA,EAAQC,IAAOC,MAAMC,OAAM,iBAAO,CAC7CC,UAAU,YADSH,CAAH,yMAII,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,eAMhC,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,eAIrCC,EAAWT,IAAOU,SAASR,OAAM,iBAAO,CACnDC,UAAU,SACVQ,KAAM,KAFgBX,CAAH,qMAKH,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,eAM5B,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,eAIrCI,EAAQZ,IAAOa,MAAMX,OAAM,iBAAO,CAC7CC,UAAU,kCADSH,CAAH,0BAILc,EAAiBd,IAAOe,IAAIb,OAAkB,iBAAO,CAChEC,UAAU,mBADkBH,CAAH,oCAGvB,qBAAGgB,SAGMC,EAAajB,IAAOe,IAAIb,OAAM,iBAAO,CAChDC,UAAU,+CADcH,CAAH,0BAGVkB,EAAYlB,IAAOe,IAAIb,OAAM,iBAAO,CAC/CC,UAAU,6BADaH,CAAH,6CAGX,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,eAEfP,IAAOe,IAAIb,OAAM,iBAAO,CAChDC,UAAU,sBADcH,CAAH,0BAIIA,IAAOe,IAAIb,OAAM,iBAAO,CACjDC,UAAU,4BADeH,CAAH,0BAGGA,IAAOe,IAAIb,OAAM,iBAAO,CACjDC,UAAU,2BADeH,CAAH,2B,qGCrDlBmB,EAAoBnB,IAAOe,IAAIb,OAA+B,iBAAO,CACzEC,UAAU,6HADcH,CAAH,mCAGnB,SAACI,GAAD,OACAA,EAAMgB,SAAN,8BAEgBhB,EAAMC,MAAMC,OAAOe,WAFnC,yBAGSjB,EAAMC,MAAMC,OAAOe,WAH5B,uDAUSC,EAAc,SAAC,GAAD,IACzBF,EADyB,EACzBA,SACAG,EAFyB,EAEzBA,SACAC,EAHyB,EAGzBA,QAHyB,OAmBzB,aAVA,CAUCL,EAAD,CAAmBC,SAAUA,EAAUI,QAASA,EAAhD,SACGD,M,wKC9BE,SAASE,EAAQC,EAAWC,GACjC,IAAMC,EAAQC,aACd,cAAsCD,EAAtC,GAAOE,EAAP,KAAoBC,EAApB,KAUMC,EAtBR,SAAwBC,GACtB,IAAMC,EAAML,WAMZ,OAJAA,aAAgB,WACdK,EAAIC,QAAUF,KAGTC,EAAIC,QAeiBC,CARRP,WAAc,WAChC,OAAIC,EACKJ,EAAKW,QAAQP,IAGd,IACP,CAACA,EAAaJ,KAoCjB,OAhCAG,aAAgB,WACM,IAAhBH,EAAKY,OAMW,OAAhBR,GAAyBA,GAAeJ,EAAKa,SAAST,KAKzB,kBAAxBE,GACPA,GAAuB,IACtBN,EAAKM,IAAwBN,EAAKM,EAAsB,IAEzDD,EACEL,EAAKM,IAAwBN,EAAKM,EAAsB,IAMzC,OAAfL,GAIJI,EACEJ,GAAcD,EAAKa,SAASZ,GAAcA,EAAaD,EAAK,KA1B5DK,OAAeS,KA4BhB,CAACV,EAAaH,EAAYD,IAEtBE,EAGF,SAASa,EAAT,GAOH,IANFlB,EAMC,EANDA,SAMC,IALDmB,cAKC,MALQ,OAKR,EAJEtC,EAIF,iBACD,EAAwCyB,WAA0B,WAAXa,GAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KAUA,OARAf,aAAgB,WACVzB,EAAMyC,QAIVD,GAAgB,KACf,CAACxC,EAAMyC,SAEH,+CAASzC,GAAT,aAAiBuC,EAAepB,EAAW,U,iCC/EpD,kDAEauB,EAAS,WACpB,OACE,sBAAK3C,UAAU,cAAf,UACE,mBAAGA,UAAU,yCACb,oBAAIA,UAAU,qBAAd,qC,qICCA4C,EAAa/C,IAAOgD,OAAO9C,OAAmB,iBAAO,CACzDC,UAAU,kCADOH,CAAH,2NAKE,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,YAAc,QACjD,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,eAGzB,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,YAAc,QAQjDyC,EAAkB,SAAC,GAMzB,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,SAKA,OACE,sBAAKhD,UAAU,gCAAf,UACE,eAAC4C,EAAD,CACE5C,UAAwB,QAAbgD,EAAqB,SAAW,GAC3C3B,QAAS,kBAAM0B,EAAS,QAF1B,UAIE,mBAAG/C,UAAU,uBAJf,SAOA,eAAC4C,EAAD,CACE5C,UAAwB,aAAbgD,EAA0B,SAAW,GAChD3B,QAAS,kBAAM0B,EAAS,aAF1B,UAIE,mBAAG/C,UAAU,0BAJf,cAOA,eAAC4C,EAAD,CACE5C,UAAwB,WAAbgD,EAAwB,SAAW,GAC9C3B,QAAS,kBAAM0B,EAAS,WAF1B,UAIE,mBAAG/C,UAAU,gBAJf,YAOA,eAAC4C,EAAD,CACE5C,UAAwB,YAAbgD,EAAyB,SAAW,GAC/C3B,QAAS,kBAAM0B,EAAS,YAF1B,UAIE,mBAAG/C,UAAU,qBAJf,aAOA,eAAC4C,EAAD,CACE5C,UAAwB,WAAbgD,EAAwB,SAAW,GAC9C3B,QAAS,kBAAM0B,EAAS,WAF1B,UAIE,mBAAG/C,UAAU,qBAJf,gB,6CCvDN,SAASiD,EAAUC,EAASf,GAE1B,KAAMgB,gBAAgBF,GACpB,OAAO,IAAIA,EAAUC,EAASf,GAIhCgB,KAAKD,QAAUA,GAAW,GAC1BC,KAAKhB,OAASA,GAAU,GAO1Bc,EAAUG,UAAUC,MAAQ,SAAUC,EAAmBC,GAEvD,IAAMC,EAAeC,SAASH,EAAmB,IAC7CI,EAAcD,SAASF,EAAkB,KAAO,EAG9CI,EAAaC,KAAKC,KAAKL,EAAeL,KAAKD,SAG7CQ,EAAc,IAChBA,EAAc,GAIZA,EAAcC,IAChBD,EAAcC,GAIhB,IAAIG,EAAYF,KAAKG,IAAI,EAAGL,EAAcE,KAAKI,MAAMb,KAAKhB,OAAS,IAG/D8B,EAAWL,KAAKM,IAClBP,EACAD,EAAcE,KAAKI,MAAMb,KAAKhB,OAAS,IAKrC8B,EAAWH,EAAY,EAAIX,KAAKhB,SAC9BuB,EAAcC,EAAa,EAC7BM,EAAWL,KAAKM,IACdP,EACAM,GAAYd,KAAKhB,QAAU8B,EAAWH,KAGxCA,EAAYF,KAAKG,IACf,EACAD,GAAaX,KAAKhB,QAAU8B,EAAWH,MAMzCG,EAAWH,EAAY,EAAIX,KAAKhB,SAE9BuB,EAAcC,EAAa,EAC7BG,GAAa,EAEbG,GAAY,GAMhB,IAAIE,EAAchB,KAAKD,SAAWQ,EAAc,GAC5CS,EAAc,IAChBA,EAAc,GAIhB,IAAIC,EAAajB,KAAKD,QAAUQ,EAAc,EAQ9C,OAPIU,EAAa,IACfA,EAAa,GAEXA,EAAaR,KAAKG,IAAIP,EAAe,EAAG,KAC1CY,EAAaR,KAAKG,IAAIP,EAAe,EAAG,IAGnC,CACLG,aACAU,MAAOT,KAAKM,IAAID,EAAWH,EAAY,EAAGH,GAC1CD,cACAI,YACAG,WACAK,aAAcZ,EAAc,EAC5Ba,SAAUb,EAAc,EACxBc,gBAAiBd,EAAc,EAC/Be,YAAaf,EAAcC,EAC3BH,eACAkB,QAASd,KAAKM,IAAIE,EAAaD,EAAc,EAAGX,GAChDW,cACAC,eAIWnB,I,EAAAA,ICpGT0B,EAAY9E,IAAOe,IAAIb,OAAM,iBAAO,CACxCC,UAAU,oBADMH,CAAH,uaAKS,SAACI,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,eAelC,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,eAe5CuE,EAAoB,WAExB,IAF+D,IAAtCC,EAAqC,uDAA7B,EAAGC,EAA0B,uCACxDT,EAAQ,GACLU,EAAIF,EAAOE,GAAKD,EAAKC,GAAK,EACjCV,EAAMW,KAAKD,GAEb,OAAOV,GAGIY,EAAa,SAAC,GAMF,IAAD,IALtBvB,mBAKsB,MALR,EAKQ,MAJtBR,eAIsB,MAJZ,GAIY,EAHtBS,EAGsB,EAHtBA,WACAuB,EAEsB,EAFtBA,WACAC,EACsB,EADtBA,YAEA,EAA8D,IAAIlC,EAChEC,EAzBgB,GA2BhBG,MAAM6B,EAAYxB,GAHZI,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,SAAUO,EAA7B,EAA6BA,gBAAiBC,EAA9C,EAA8CA,YAS9C,OAJAW,qBAAU,WACRC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,aACnC,CAAC9B,EAAaC,IAGf,qBAAK3D,UAAU,mBAAf,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,eAAC2E,EAAD,WACGH,GACC,wBACExE,UAAWyF,IAAW,oBAAqB,CACzCC,UAAWlB,IAEbnD,QAAS,kBAAM8D,EAAY,CAAEQ,KAAMjC,EAAc,KACjDkC,KAAK,SALP,SAOE,mBAAG5F,UAAU,wBAGhB4E,EAAkBd,EAAWG,GAAU4B,KAAI,SAACF,GAAD,OAC1C,wBAEE3F,UAAWyF,IAAW,eAAgB,CACpC,mBAAoBE,IAASjC,IAE/BgC,SAAUC,IAASjC,EACnBrC,QAAS,kBAAM8D,EAAY,CAAEQ,UAC7BC,KAAK,SAPP,SASGD,GARIA,MAWRlB,GACC,wBACEzE,UAAWyF,IAAW,oBAAqB,CACzCC,UAAWjB,IAEbpD,QAAS,kBAAM8D,EAAY,CAAEQ,KAAMjC,EAAc,KACjDkC,KAAK,SALP,SAOE,mBAAG5F,UAAU,mCCcd8F,UAvGQ,WACrB,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsC3E,YAAQ,CAAC,WAAY,YAA3D,mBAAOK,EAAP,KAAoBC,EAApB,KAGA,EAA0CmE,qBAA1C,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAiB,GAAvD,mBAAOrC,EAAP,KAAoB0C,EAApB,KAMMC,EAAe,EACfnB,EAAaoB,IAAMnE,OACnBwB,EANSC,KAAKI,MAAMsC,IAAMnE,OAASkE,IACrBC,IAAMnE,OAASkE,EAAe,EAAI,EAAI,GAkC1D,OAJAjB,qBAAU,WApBRe,EACEG,IAAMC,MACJF,EAAe3C,EAAc2C,EAC7B3C,EAAc2C,MAmBjB,CAACL,EAActC,IAGhB,gCACE,qBAAK1D,UAAU,QAAf,SACE,oBAAIA,UAAU,iCAAd,6CAEF,sBAAKA,UAAU,mCAAf,UACE,cAACmB,EAAA,EAAD,CACEF,SAA0B,aAAhBU,EACVN,QAAS,kBAAMO,EAAe,aAFhC,uBAMA,cAACT,EAAA,EAAD,CACEF,SAA0B,YAAhBU,EACVN,QAAS,kBAAMO,EAAe,YAFhC,yBAOF,eAAC4E,EAAA,EAAD,CAAMxG,UAAU,QAAhB,UACE,eAAC,IAAD,CAAgBA,UAAU,yCAA1B,UACE,cAAC,IAAD,CAAMA,UAAU,kBAAkByG,GAAG,wBAArC,SACE,cAAC,IAAD,4BAEF,cAAC,IAAD,CAAOb,KAAK,OAAOc,YAAY,2BAEjC,cAAC,EAAD,CACE1D,SAAUgD,EACVjD,SA3CmB,SAAC4D,GAC1BV,EAAgBU,SA6Cd,gCACE,eAAC,IAAD,CAAUjE,OAAwB,aAAhBf,EAAlB,UACE,qBAAK3B,UAAU,uDAAf,gBACGkG,QADH,IACGA,OADH,EACGA,EAAeL,KAAI,SAACe,GAAD,OAClB,cAAC,IAAD,CAAMH,GAAE,+BAA0BG,EAAKC,IAAvC,SACE,cAACC,EAAA,EAAD,CAAeF,KAAMA,KAD2BA,EAAKC,SAS3D,cAAC,EAAD,CACEnD,YAAaA,EACbwB,WAAYA,EACZhC,QAASmD,EACT1C,WAAYA,EACZwB,YAAa,gBAAGQ,EAAH,EAAGA,KAzDxBS,EAyD4CT,SAGxC,cAAC,IAAD,CAAUjD,OAAwB,YAAhBf,EAAlB,SACE,cAACgB,EAAA,EAAD","file":"static/js/19.42b18fe6.chunk.js","sourcesContent":["import styled, { Interpolation } from 'styled-components';\n\ninterface InputProps {\n  className?: string;\n  style?: Interpolation<React.CSSProperties>;\n}\n\nexport const Input = styled.input.attrs(() => ({\n  className: `w-full`,\n}))`\n  background: transparent;\n  border: 1px solid ${(props) => props.theme.colors.primaryText}30;\n  border-radius: 4px;\n  padding: 0.4rem 0.6rem;\n  font-size: 0.95rem;\n\n  &:focus {\n    border-color: ${(props) => props.theme.colors.primaryBlue};\n  }\n`;\n\nexport const TextArea = styled.textarea.attrs(() => ({\n  className: `w-full`,\n  rows: 5,\n}))`\n  border-radius: 4px;\n  border-color: ${(props) => props.theme.colors.primaryText}30;\n  padding: 0.3rem 0.7rem;\n  background: transparent;\n  font-size: 0.95rem;\n\n  &:focus {\n    border-color: ${(props) => props.theme.colors.primaryBlue};\n  }\n`;\n\nexport const Label = styled.label.attrs(() => ({\n  className: `text-sm mb-1 block font-bold`,\n}))``;\n\nexport const InputContainer = styled.div.attrs<InputProps>(() => ({\n  className: `mb-8 relative`,\n}))<InputProps>`\n  ${({ style }) => style};\n`;\n\nexport const InputError = styled.div.attrs(() => ({\n  className: `text-xs text-custom-light-primaryRed mt-1`,\n}))``;\nexport const InputHint = styled.div.attrs(() => ({\n  className: `text-xs mt-1 font-light`,\n}))`\n  color: ${(props) => props.theme.colors.primaryText}90;\n`;\nexport const InputField = styled.div.attrs(() => ({\n  className: `relative m-0 p-0`,\n}))``;\n\nexport const InputSuffix = styled.div.attrs(() => ({\n  className: `absolute top-5 right-2`,\n}))``;\nexport const InputPrefix = styled.div.attrs(() => ({\n  className: `absolute top-5 left-2`,\n}))``;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface ITabSelectorButtonProps {\n  className?: string;\n  isActive?: boolean;\n}\n\nconst TabSelectorButton = styled.div.attrs<ITabSelectorButtonProps>(() => ({\n  className: `mr-8 group inline-flex items-center px-3 py-2 border-b-2 font-bold text-base leading-5 cursor-pointer whitespace-nowrap`,\n}))<ITabSelectorButtonProps>`\n  ${(props) =>\n    props.isActive\n      ? `\n    border-color: ${props.theme.colors.primaryRed};\n    color: ${props.theme.colors.primaryRed};\n  `\n      : `\n      border-color: transparent;\n    `}\n`;\n\nexport const TabSelector = ({\n  isActive,\n  children,\n  onClick,\n}: {\n  isActive: boolean;\n  children: React.ReactNode;\n  onClick: () => void;\n}) => (\n  // <button\n  //   className={`mr-8 group inline-flex items-center px-2 py-4 border-b-2 font-medium text-sm leading-5 cursor-pointer whitespace-nowrap ${\n  //     isActive\n  //       ? 'border-indigo-500 text-indigo-600 focus:outline-none focus:text-indigo-800 focus:border-indigo-700'\n  //       : 'border-transparent text-gray-500 hover:text-gray-600 hover:border-gray-300 focus:text-gray-600 focus:border-gray-300'\n  //   }`}\n  //   onClick={onClick}\n  // >\n  //   {children}\n  // </button>\n  <TabSelectorButton isActive={isActive} onClick={onClick}>\n    {children}\n  </TabSelectorButton>\n);\n","import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef<T>();\n\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n\nexport function useTabs(tabs: any, defaultTab?: any) {\n  const state = React.useState<any>();\n  const [selectedTab, setSelectedTab] = state;\n\n  const activeIndex = React.useMemo(() => {\n    if (selectedTab) {\n      return tabs.indexOf(selectedTab);\n    }\n\n    return -1;\n  }, [selectedTab, tabs]);\n\n  const previousActiveIndex = usePrevious(activeIndex);\n\n  React.useEffect(() => {\n    if (tabs.length === 0) {\n      setSelectedTab(undefined);\n\n      return;\n    }\n\n    if (selectedTab === null || (selectedTab && tabs.includes(selectedTab))) {\n      return;\n    }\n\n    if (\n      typeof previousActiveIndex === 'number' &&\n      previousActiveIndex >= 0 &&\n      (tabs[previousActiveIndex] || tabs[previousActiveIndex - 1])\n    ) {\n      setSelectedTab(\n        tabs[previousActiveIndex] || tabs[previousActiveIndex - 1]\n      );\n\n      return;\n    }\n\n    if (defaultTab === null) {\n      return;\n    }\n\n    setSelectedTab(\n      defaultTab && tabs.includes(defaultTab) ? defaultTab : tabs[0]\n    );\n  }, [selectedTab, defaultTab, tabs]);\n\n  return state;\n}\n\nexport function TabPanel({\n  children,\n  render = 'lazy',\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & {\n  hidden: boolean;\n  render?: 'always' | 'lazy';\n}) {\n  const [shouldRender, setShouldRender] = React.useState(render === 'always');\n\n  React.useEffect(() => {\n    if (props.hidden) {\n      return;\n    }\n\n    setShouldRender(true);\n  }, [props.hidden]);\n\n  return <div {...props}>{shouldRender ? children : null}</div>;\n}\n","import React from 'react';\n\nexport const NoData = () => {\n  return (\n    <div className=\"text-center\">\n      <i className=\"las la-exclamation-triangle text-5xl\"></i>\n      <h3 className=\"font-bold text-2xl\">No Data Available!</h3>\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IFilterItem {\n  className?: string;\n}\n\nconst FilterItem = styled.button.attrs<IFilterItem>(() => ({\n  className: `text-sm px-4 py-2 rounded-lg`,\n}))<IFilterItem>`\n  transition: all 0.3s ease;\n  &.active {\n    background: ${(props) => props.theme.colors.primaryBlue + '40'};\n    color: ${(props) => props.theme.colors.primaryBlue};\n  }\n  &:hover {\n    background: ${(props) => props.theme.colors.primaryBlue + '40'};\n  }\n  i {\n    font-size: 1.1rem;\n    margin-right: 0.2rem;\n  }\n`;\n\nexport const LaunchpadFilter = ({\n  onSelect,\n  selected,\n}: {\n  onSelect: (option: string) => void;\n  selected: string;\n}) => {\n  return (\n    <div className=\"flex flex-wrap justify-evenly\">\n      <FilterItem\n        className={selected === 'kyc' ? 'active' : ''}\n        onClick={() => onSelect('kyc')}\n      >\n        <i className=\"las la-fingerprint\"></i>\n        KYC\n      </FilterItem>\n      <FilterItem\n        className={selected === 'upcoming' ? 'active' : ''}\n        onClick={() => onSelect('upcoming')}\n      >\n        <i className=\"las la-hourglass-half\"></i>\n        Upcoming\n      </FilterItem>\n      <FilterItem\n        className={selected === 'active' ? 'active' : ''}\n        onClick={() => onSelect('active')}\n      >\n        <i className=\"las la-play\"></i>\n        Active\n      </FilterItem>\n      <FilterItem\n        className={selected === 'success' ? 'active' : ''}\n        onClick={() => onSelect('success')}\n      >\n        <i className=\"las la-thumbs-up\"></i>\n        Success\n      </FilterItem>\n      <FilterItem\n        className={selected === 'failed' ? 'active' : ''}\n        onClick={() => onSelect('failed')}\n      >\n        <i className=\"las la-power-off\"></i>\n        Failed\n      </FilterItem>\n    </div>\n  );\n};\n","// shamelessly stolen from https://github.com/deoxxa/paginator/blob/master/index.js\n\n// Paginator constructor\n//\n// `perPage` is the number of results per page, `length` is the number of\n// pages to display. They default to `25` and `10` respectively.\nfunction Paginator(perPage, length) {\n  // You really should be calling this with `new Paginator`, but WHATEVER.\n  if (!(this instanceof Paginator)) {\n    return new Paginator(perPage, length);\n  }\n\n  // Woo, defaults!\n  this.perPage = perPage || 25;\n  this.length = length || 10;\n}\n\n// Build an object with all the necessary information for outputting pagination\n// controls.\n//\n// (new Paginator(paginator.build(100, 2)\nPaginator.prototype.build = function (totalResultsValue, currentPageValue) {\n  // Ensure both totalResults and currentPage are treated as Numbers\n  const totalResults = parseInt(totalResultsValue, 10);\n  let currentPage = parseInt(currentPageValue, 10) || 1;\n\n  // We want the number of pages, rounded up to the nearest page.\n  const totalPages = Math.ceil(totalResults / this.perPage);\n\n  // Obviously we can't be on a negative or 0 page.\n  if (currentPage < 1) {\n    currentPage = 1;\n  }\n  // If the user has done something like /page/99999 we want to clamp that back\n  // down.\n  if (currentPage > totalPages) {\n    currentPage = totalPages;\n  }\n\n  // This is the first page to be displayed as a numbered link.\n  let firstPage = Math.max(1, currentPage - Math.floor(this.length / 2));\n\n  // And here's the last page to be displayed specifically.\n  let lastPage = Math.min(\n    totalPages,\n    currentPage + Math.floor(this.length / 2)\n  );\n\n  // This is triggered if we're at or near one of the extremes; we won't have\n  // enough page links. We need to adjust our bounds accordingly.\n  if (lastPage - firstPage + 1 < this.length) {\n    if (currentPage < totalPages / 2) {\n      lastPage = Math.min(\n        totalPages,\n        lastPage + (this.length - (lastPage - firstPage))\n      );\n    } else {\n      firstPage = Math.max(\n        1,\n        firstPage - (this.length - (lastPage - firstPage))\n      );\n    }\n  }\n\n  // This can be triggered if the user wants an odd number of pages.\n  if (lastPage - firstPage + 1 > this.length) {\n    // We want to move towards whatever extreme we're closest to at the time.\n    if (currentPage > totalPages / 2) {\n      firstPage += 1;\n    } else {\n      lastPage -= 1;\n    }\n  }\n\n  // First result on the page. This, along with the field below, can be used to\n  // do \"showing x to y of z results\" style things.\n  let firstResult = this.perPage * (currentPage - 1);\n  if (firstResult < 0) {\n    firstResult = 0;\n  }\n\n  // Last result on the page.\n  let lastResult = this.perPage * currentPage - 1;\n  if (lastResult < 0) {\n    lastResult = 0;\n  }\n  if (lastResult > Math.max(totalResults - 1, 0)) {\n    lastResult = Math.max(totalResults - 1, 0);\n  }\n\n  return {\n    totalPages,\n    pages: Math.min(lastPage - firstPage + 1, totalPages),\n    currentPage,\n    firstPage,\n    lastPage,\n    previousPage: currentPage - 1,\n    nextPage: currentPage + 1,\n    hasPreviousPage: currentPage > 1,\n    hasNextPage: currentPage < totalPages,\n    totalResults,\n    results: Math.min(lastResult - firstResult + 1, totalResults),\n    firstResult,\n    lastResult,\n  };\n};\n\nexport default Paginator;\n","import React, { useEffect } from 'react';\n\nimport classNames from 'classnames';\nimport styled from 'styled-components';\n\nimport Paginator from './paginator';\n\nconst PageLinks = styled.div.attrs(() => ({\n  className: `flex space-x-2`,\n}))`\n  button {\n    font-size: 1rem;\n    border: 1px solid ${(props) => props.theme.colors.primaryText}20;\n    padding: 0.5rem;\n    border-radius: 8px;\n    width: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: background 0.3s ease;\n\n    &:hover {\n      background: #c4c4c450;\n    }\n\n    &.current {\n      background: ${(props) => props.theme.colors.primaryBlue};\n      color: #ffffff;\n    }\n  }\n`;\n\nconst PAGE_RANGES = 5;\ninterface IPaginationProps {\n  currentPage: number;\n  totalPages?: number;\n  totalItems: number;\n  perPage?: number;\n  onPageClick: (page: { page: number }) => void;\n}\n\nconst createPageNumbers = (start = 1, end: number): number[] => {\n  const pages = [];\n  for (let i = start; i <= end; i += 1) {\n    pages.push(i);\n  }\n  return pages;\n};\n\nexport const Pagination = ({\n  currentPage = 1,\n  perPage = 15,\n  totalPages,\n  totalItems,\n  onPageClick,\n}: IPaginationProps) => {\n  const { firstPage, lastPage, hasPreviousPage, hasNextPage } = new Paginator(\n    perPage,\n    PAGE_RANGES\n  ).build(totalItems, currentPage);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [currentPage, totalPages]);\n\n  return (\n    <div className=\"flex mt-10 py-20\">\n      <div className=\"w-full\">\n        <nav className=\"flex justify-start\">\n          <PageLinks>\n            {hasPreviousPage && (\n              <button\n                className={classNames('prev page-numbers', {\n                  disabled: !hasPreviousPage,\n                })}\n                onClick={() => onPageClick({ page: currentPage - 1 })}\n                type=\"button\"\n              >\n                <i className=\"las la-angle-left\"></i>\n              </button>\n            )}\n            {createPageNumbers(firstPage, lastPage).map((page) => (\n              <button\n                key={page}\n                className={classNames('page-numbers', {\n                  'current disabled': page === currentPage,\n                })}\n                disabled={page === currentPage}\n                onClick={() => onPageClick({ page })}\n                type=\"button\"\n              >\n                {page}\n              </button>\n            ))}\n            {hasNextPage && (\n              <button\n                className={classNames('next page-numbers', {\n                  disabled: !hasNextPage,\n                })}\n                onClick={() => onPageClick({ page: currentPage + 1 })}\n                type=\"button\"\n              >\n                <i className=\"las la-angle-right\"></i>\n              </button>\n            )}\n          </PageLinks>\n        </nav>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Card } from '../../../../components/common/Card';\nimport { Link } from 'react-router-dom';\nimport { LaunchPadCard } from '../../../../components/layout/LaunchComponent/LaunchPadCard';\nimport { lists, ListsType } from './demo-data';\nimport { Input, InputContainer } from '../../../../components/common/Inputs';\nimport { SecondaryButton } from '../../../../components/common/Button';\nimport { LaunchpadFilter } from '../../../../components/layout/LaunchComponent/LaunchpadFilter';\nimport { TabSelector } from '../../../../components/common/Tabs/TabSelector';\nimport { TabPanel, useTabs } from '../../../../components/common/Tabs';\nimport { NoData } from '../../../../components/layout/NoData';\nimport { LaunchPadLoader } from '../../../../components/common/CardLoader';\nimport { Pagination } from '../../../../components/common/Pagination';\n\nconst LaunchpadLists = () => {\n  const [filterOption, setFilterOption] = useState<string>('');\n  const [selectedTab, setSelectedTab] = useTabs(['allPools', 'myPools']);\n\n  //sample pagination data\n  const [paginatedList, setPaginatedList] = useState<ListsType[]>();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const getTotalPages = () => {\n    const main = Math.floor(lists.length / itemsPerPage);\n    const remainder = lists.length % itemsPerPage > 0 ? 1 : 0;\n    return main + remainder;\n  };\n  const itemsPerPage = 3;\n  const totalItems = lists.length;\n  const totalPages = getTotalPages();\n\n  const paginateList = () => {\n    // This implementation is incorrect, I did not have enough time to create the demo implementation since you would retrieve the data from the blockchain.\n    // All that is required is to use the page number after calling goToPage() to get the data for that page from the blockchain.\n    setPaginatedList(\n      lists.slice(\n        itemsPerPage - currentPage * itemsPerPage,\n        currentPage * itemsPerPage\n      )\n    );\n  };\n  // Sample data ends\n\n  const selectFilterOption = (option: string) => {\n    setFilterOption(option);\n    // Perform request to server\n  };\n\n  const goToPage = (pageNumber: number) => {\n    // console.log(pageNumber);\n    setCurrentPage(pageNumber);\n    // Make request to blockchain with the page number\n  };\n\n  useEffect(() => {\n    paginateList();\n  }, [filterOption, currentPage]);\n\n  return (\n    <div>\n      <div className=\"py-10\">\n        <h3 className=\"text-2xl md:text-3xl font-bold\">Current PreSales 🔥</h3>\n      </div>\n      <nav className=\"flex mx-auto justify-center mb-8\">\n        <TabSelector\n          isActive={selectedTab === 'allPools'}\n          onClick={() => setSelectedTab('allPools')}\n        >\n          All Pools\n        </TabSelector>\n        <TabSelector\n          isActive={selectedTab === 'myPools'}\n          onClick={() => setSelectedTab('myPools')}\n        >\n          My Pools\n        </TabSelector>\n      </nav>\n      <Card className=\"mb-10\">\n        <InputContainer className=\"flex flex-col md:flex-row md:space-x-2\">\n          <Link className=\"hidden md:block\" to=\"/app/launchpad/create\">\n            <SecondaryButton>Create Pool</SecondaryButton>\n          </Link>\n          <Input type=\"text\" placeholder=\"Enter Token Address\" />\n        </InputContainer>\n        <LaunchpadFilter\n          selected={filterOption}\n          onSelect={selectFilterOption}\n        />\n      </Card>\n      <div>\n        <TabPanel hidden={selectedTab !== 'allPools'}>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5\">\n            {paginatedList?.map((list) => (\n              <Link to={`/app/launchpad/lists/${list.id}`} key={list.id}>\n                <LaunchPadCard list={list} />\n              </Link>\n            ))}\n          </div>\n          {/* Launchpad items loader component */}\n          {/* <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-5 mt-3\">\n            <LaunchPadLoader />\n          </div> */}\n          <Pagination\n            currentPage={currentPage} // The currently active page from the blockchain\n            totalItems={totalItems} // Total amount of items in retrieved from the blockchain\n            perPage={itemsPerPage} // Number of items per page\n            totalPages={totalPages} // Total number of expected pages\n            onPageClick={({ page }) => goToPage(page)}\n          />\n        </TabPanel>\n        <TabPanel hidden={selectedTab !== 'myPools'}>\n          <NoData />\n        </TabPanel>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchpadLists;\n"],"sourceRoot":""}