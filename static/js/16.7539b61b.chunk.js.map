{"version":3,"sources":["components/common/Card/index.tsx","components/common/Inputs/index.tsx","utils/index.tsx","components/common/AppSelect/index.tsx","components/common/Alerts/index.tsx","pages/Dashboard/MintToken/index.tsx"],"names":["Card","styled","div","attrs","className","props","theme","colors","secondaryBackground","primaryText","CardIcon","secondaryRed","primaryRed","CardHeader","h3","CardSubHeader","CardBody","Input","input","primaryBlue","TextArea","textarea","rows","Label","label","InputContainer","style","InputError","InputHint","shortenAddress","address","start","substring","end","length","formatTimeStamp","date","parseInt","moment","format","formatNumberToCurrencyString","number","Intl","NumberFormat","SelectContainer","secondaryBlue","applySelectTheme","themeSelect","primary25","primary","customStyles","option","styles","cursor","fontSize","control","padding","menu","zIndex","noOptionsMessage","AppSelect","id","placeholder","name","options","value","onChange","isClearable","disabled","optionDisabled","multiple","isOpen","onInputChange","isSearchable","inputRef","menuIsOpen","instanceId","isDisabled","isOptionDisabled","isMulti","classNamePrefix","ref","MySwal","withReactContent","Swal","Alert","title","message","icon","iconHtml","iconColor","confirmButtonText","confirmButtonColor","showCancelButton","cancelButtonText","cancelButtonColor","position","width","window","localStorage","getItem","fire","html","background","color","tokenTypeOptions","validationSchema","Yup","shape","tokenType","required","tokenName","tokenSymbol","tokenDecimals","generateYield","generateLiquidity","tokenSupply","typeError","formOptions","resolver","yupResolver","MintToken","useState","tokenOption","setTokenOption","useForm","register","handleSubmit","formState","setError","errors","handleForm","a","console","log","useEffect","onSubmit","htmlFor","render","field","find","c","val","type"],"mappings":"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","file":"static/js/16.7539b61b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\ninterface ICardTheme {\n  className?: string;\n}\n\nexport const Card = styled.div.attrs<ICardTheme>(() => ({\n  className: `shadow-lg py-8 px-5 rounded-md`,\n}))<ICardTheme>`\n  background: ${(props) => props.theme.colors.secondaryBackground};\n  border: 1px solid ${(props) => props.theme.colors.primaryText}20;\n\n  &.launch-card {\n    transition: all 0.3s ease;\n    cursor: pointer;\n    &:hover {\n      box-shadow: -1px 0px 16px 8px rgba(93, 0, 255, 0.2);\n      transform: scale(1.01);\n    }\n  }\n`;\n\nexport const CardIcon = styled.div.attrs<ICardTheme>(() => ({\n  className: `shadow flex py-8 px-5`,\n}))<ICardTheme>`\n  background: ${(props) => props.theme.colors.secondaryRed};\n  color: ${(props) => props.theme.colors.primaryRed};\n  border-radius: 10rem;\n  font-size: 2rem;\n  font-weight: bolder;\n  width: 70px;\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CardHeader = styled.h3.attrs<ICardTheme>(() => ({\n  className: `font-bold text-2xl md:text-3xl`,\n}))<ICardTheme>``;\n\nexport const CardSubHeader = styled.h3.attrs<ICardTheme>(() => ({\n  className: `font-bold text-base md:text-xl`,\n}))<ICardTheme>`\n  color: ${(props) => props.theme.colors.primaryText}80;\n`;\n\nexport const CardBody = styled.div.attrs<ICardTheme>(() => ({\n  className: `text-base mt-8`,\n}))<ICardTheme>``;\n","import styled, { Interpolation } from 'styled-components';\n\ninterface InputProps {\n  className?: string;\n  style?: Interpolation<React.CSSProperties>;\n}\n\nexport const Input = styled.input.attrs(() => ({\n  className: `w-full`,\n}))`\n  background: transparent;\n  border: 1px solid ${(props) => props.theme.colors.primaryText}30;\n  border-radius: 4px;\n  padding: 0.4rem 0.6rem;\n  font-size: 0.95rem;\n\n  &:focus {\n    border-color: ${(props) => props.theme.colors.primaryBlue};\n  }\n`;\n\nexport const TextArea = styled.textarea.attrs(() => ({\n  className: `w-full`,\n  rows: 5,\n}))`\n  border-radius: 4px;\n  border-color: ${(props) => props.theme.colors.primaryText}30;\n  padding: 0.3rem 0.7rem;\n  background: transparent;\n  font-size: 0.95rem;\n\n  &:focus {\n    border-color: ${(props) => props.theme.colors.primaryBlue};\n  }\n`;\n\nexport const Label = styled.label.attrs(() => ({\n  className: `text-sm mb-1 block font-bold`,\n}))``;\n\nexport const InputContainer = styled.div.attrs<InputProps>(() => ({\n  className: `mb-8 relative`,\n}))<InputProps>`\n  ${({ style }) => style};\n`;\n\nexport const InputError = styled.div.attrs(() => ({\n  className: `text-xs text-custom-light-primaryRed mt-1`,\n}))``;\nexport const InputHint = styled.div.attrs(() => ({\n  className: `text-xs mt-1 font-light`,\n}))`\n  color: ${(props) => props.theme.colors.primaryText}90;\n`;\nexport const InputField = styled.div.attrs(() => ({\n  className: `relative m-0 p-0`,\n}))``;\n\nexport const InputSuffix = styled.div.attrs(() => ({\n  className: `absolute top-5 right-2`,\n}))``;\nexport const InputPrefix = styled.div.attrs(() => ({\n  className: `absolute top-5 left-2`,\n}))``;\n","import moment from 'moment';\n\nexport const shortenAddress = (address: string): string => {\n  let start = address.substring(0, 6);\n  let end = address.substring(address.length - 1 - 3, address.length);\n  const result = `${start}....${end}`;\n  return result;\n};\nexport const formatTimeStamp = (date: string) =>\n  parseInt(moment(date).format('x'), 10);\n\nexport const formatNumberToCurrencyString = (number: number) =>\n  new Intl.NumberFormat().format(number);\n","import React from 'react';\n\nimport ReactSelect, { Theme } from 'react-select';\nimport styled from 'styled-components';\n\nexport interface IOptions {\n  value: string;\n  label: string;\n}\n\nconst SelectContainer = styled.div`\n  .Select__control {\n    background: transparent;\n    border: 1px solid ${(props) => props.theme.colors.primaryText}30;\n\n    .Select__single-value {\n      color: ${(props) => props.theme.colors.primaryText};\n    }\n\n    .Select__input-container {\n      color: ${(props) => props.theme.colors.primaryText}80;\n    }\n  }\n  .Select__menu {\n    background: ${(props) => props.theme.colors.secondaryBackground};\n\n    .Select__menu-list {\n      .Select__option {\n        &.Select__option--is-focused {\n          background: transparent;\n        }\n        &.Select__option--is-selected {\n          background: transparent;\n          color: ${(props) => props.theme.colors.primaryText}80;\n        }\n        &:hover {\n          background: ${(props) => props.theme.colors.secondaryBlue};\n        }\n      }\n    }\n  }\n`;\n\nexport const applySelectTheme = (themeSelect: Theme) => ({\n  ...themeSelect,\n  // borderRadius: 0,\n  colors: {\n    ...themeSelect.colors,\n\n    primary25: '#f8f9fa',\n    // primary50: theme.colors.primaryGreen,\n    primary: '#5D00FF',\n  },\n});\n\nexport const selectZIndex = 3;\n\ninterface IProps {\n  options: IOptions[];\n  // @ts-ignore // TODO: !! fix\n  value: IOptions | IOptions[] | undefined;\n  placeholder?: string;\n  name?: string;\n  // @ts-ignore TODO: !! fix\n  onChange: (option: any) => void;\n  className?: string;\n  id?: string;\n  isClearable?: boolean;\n  disabled?: boolean;\n  optionDisabled?: (option: IOptions) => boolean;\n  multiple?: boolean;\n  isOpen?: boolean;\n  noOptionsMessage?:\n    | ((obj: { inputValue: string }) => React.ReactNode)\n    | undefined;\n  // noOptionsMessage?: () => string | null;\n  onInputChange?: (inputValue: string) => void;\n  isSearchable?: boolean;\n  inputRef?: any;\n}\n\nconst customStyles = {\n  option: (styles: object) => ({\n    ...styles,\n    cursor: 'pointer',\n    fontSize: '0.9rem',\n  }),\n  control: (styles: object) => ({\n    ...styles,\n    cursor: 'pointer',\n    fontSize: '0.9rem',\n    padding: '0.1rem',\n  }),\n  menu: (styles: object) => ({\n    ...styles,\n    zIndex: selectZIndex,\n  }),\n  noOptionsMessage: (styles: object) => ({\n    ...styles,\n    fontSize: '0.9rem',\n  }),\n};\n\nexport default function AppSelect({\n  id,\n  className,\n  placeholder,\n  name,\n  options,\n  value,\n  onChange,\n  isClearable,\n  disabled,\n  optionDisabled,\n  multiple,\n  noOptionsMessage,\n  isOpen,\n  onInputChange,\n  isSearchable,\n  inputRef,\n}: IProps) {\n  return (\n    <SelectContainer>\n      <ReactSelect\n        menuIsOpen={isOpen}\n        styles={customStyles}\n        instanceId={id}\n        className={className}\n        value={value ?? null}\n        name={name}\n        onChange={onChange}\n        options={options}\n        placeholder={placeholder}\n        isClearable={isClearable}\n        theme={applySelectTheme}\n        isDisabled={disabled}\n        isOptionDisabled={optionDisabled}\n        isMulti={multiple}\n        noOptionsMessage={noOptionsMessage}\n        onInputChange={onInputChange}\n        isSearchable={isSearchable}\n        classNamePrefix=\"Select\"\n        ref={inputRef}\n      />\n    </SelectContainer>\n  );\n}\n","import Swal, { SweetAlertIcon, SweetAlertPosition } from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nconst MySwal = withReactContent(Swal);\n\nexport const Alert = ({\n  title,\n  message,\n  icon,\n  iconHtml,\n  iconColor,\n  confirmButtonText,\n  confirmButtonColor,\n  showCancelButton,\n  cancelButtonText,\n  cancelButtonColor,\n  position,\n  width,\n}: {\n  title: string;\n  message?: string | HTMLElement | JQuery | undefined;\n  icon?: SweetAlertIcon;\n  iconHtml?: string;\n  iconColor?: string;\n  confirmButtonText?: string;\n  confirmButtonColor?: string;\n  showCancelButton?: boolean;\n  cancelButtonText?: string;\n  cancelButtonColor?: string;\n  position?: SweetAlertPosition;\n  width?: string | number;\n}) => {\n  const theme = window.localStorage.getItem('theme');\n  return MySwal.fire({\n    title: title,\n    html: message,\n    background: `${theme === 'dark' ? '#121C21' : '#ffffff'}`,\n    color: `${theme === 'dark' ? '#ffffff' : '#4f4f4f'}`,\n    icon: icon,\n    iconHtml: iconHtml,\n    iconColor: iconColor,\n    confirmButtonText: confirmButtonText || '✔️ Okay',\n    confirmButtonColor: confirmButtonColor,\n    showCancelButton: showCancelButton,\n    cancelButtonText: cancelButtonText || '❌ Cancel',\n    cancelButtonColor: cancelButtonColor,\n    position: position,\n    width: width,\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { AppModal } from '../../../components/common/AppModal';\nimport AppSelect, { IOptions } from '../../../components/common/AppSelect';\nimport { PrimaryButton } from '../../../components/common/Button';\nimport { Card } from '../../../components/common/Card';\nimport {\n  Input,\n  Label,\n  InputContainer,\n  InputError,\n  InputHint,\n} from '../../../components/common/Inputs';\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\nimport { Alert } from '../../../components/common/Alerts';\nimport { formatNumberToCurrencyString } from '../../../utils';\n\nconst tokenTypeOptions: IOptions[] = [\n  {\n    label: 'Standard Token',\n    value: 'Standard',\n  },\n  {\n    label: 'Liquidity Generator Token',\n    value: 'Liquidity',\n  },\n];\n\nconst validationSchema = Yup.object().shape({\n  tokenType: Yup.string().required('Token type is required'),\n  tokenName: Yup.string().required('Token name is required'),\n  tokenSymbol: Yup.string().required('Token symbol is required'),\n  tokenDecimals: Yup.string().required('Token Decimals is required.'),\n  generateYield: Yup.string(),\n  generateLiquidity: Yup.string(),\n  tokenSupply: Yup.number()\n    .typeError('Token supply must be a number')\n    .required('Token supply value is required'),\n});\nconst formOptions = { resolver: yupResolver(validationSchema) };\n\nconst MintToken = () => {\n  const [tokenOption, setTokenOption] = useState<string>();\n  const [modalIsOpen, setModalOpen] = useState(false);\n  const onModalClose = () => setModalOpen(false);\n  const { register, handleSubmit, setError, formState, control } =\n    useForm(formOptions);\n  const { errors } = formState;\n\n  const handleForm: SubmitHandler<any> = async (value) => {\n    // Send http request with form data\n    console.log(value);\n    Alert({\n      title: 'Token Created Successfully!',\n      message: (\n        <div className=\"py-5 space-y-2\">\n          <p className=\"flex justify-between\">\n            Name: <span>{value.tokenName}</span>\n          </p>\n          <p className=\"flex justify-between\">\n            Symbol: <span>{value.tokenSymbol}</span>\n          </p>\n          <p className=\"flex justify-between\">\n            Total Supply:{' '}\n            <span>\n              {formatNumberToCurrencyString(value.tokenSupply)}{' '}\n              {value.tokenSymbol}\n            </span>\n          </p>\n        </div>\n      ),\n    });\n  };\n\n  useEffect(() => {\n    console.log(tokenOption);\n  }, [tokenOption]);\n\n  return (\n    <div>\n      <div className=\"text-center font-bold text-3xl py-10\">\n        <h3>Create Token</h3>\n      </div>\n      <div className=\"max-w-xl mx-auto\">\n        <Card>\n          <form className=\"mt-5\" onSubmit={handleSubmit(handleForm)}>\n            <InputContainer>\n              <Label htmlFor=\"tokenType\">Token Type</Label>\n              <Controller\n                control={control}\n                name=\"tokenType\"\n                render={({ field: { onChange, value, ref } }) => (\n                  <AppSelect\n                    inputRef={ref}\n                    options={tokenTypeOptions}\n                    value={tokenTypeOptions.find((c) => c.value === value)}\n                    onChange={(val) => {\n                      setTokenOption(val.value);\n                      onChange(val.value);\n                    }}\n                    placeholder=\"Select Token Type\"\n                    isSearchable={false}\n                  />\n                )}\n              />\n              <InputError>{errors.tokenType?.message}</InputError>\n              <InputHint>\n                Fee: {tokenOption === 'Liquidity' ? '0.3 BNB' : '0.1 BNB'}\n              </InputHint>\n            </InputContainer>\n            <InputContainer>\n              <Label htmlFor=\"tokenName\">Token Name</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Ex. Astronaut\"\n                {...register('tokenName')}\n                name=\"tokenName\"\n              />\n              <InputError>{errors.tokenName?.message}</InputError>\n            </InputContainer>\n            <InputContainer>\n              <Label htmlFor=\"tokenSymbol\">Token Symbol</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Ex. NAUT\"\n                {...register('tokenSymbol')}\n                name=\"tokenSymbol\"\n              />\n              <InputError>{errors.tokenSymbol?.message}</InputError>\n            </InputContainer>\n            <InputContainer>\n              <Label htmlFor=\"tokenDecimals\">Token Decimals</Label>\n              <Input\n                type=\"number\"\n                placeholder=\"Ex. 18\"\n                {...register('tokenDecimals')}\n                name=\"tokenDecimals\"\n              />\n              <InputError>{errors.tokenDecimals?.message}</InputError>\n            </InputContainer>\n            <InputContainer>\n              <Label htmlFor=\"tokenSupply\">Total Supply </Label>\n              <Input\n                type=\"number\"\n                placeholder=\"Ex. 32000000\"\n                {...register('tokenSupply')}\n                name=\"tokenSupply\"\n              />\n              <InputError>{errors.tokenSupply?.message}</InputError>\n            </InputContainer>\n            {tokenOption === 'Liquidity' && (\n              <div>\n                <InputContainer>\n                  <Label htmlFor=\"generateYield\">\n                    Transaction fee to generate yield (%){' '}\n                  </Label>\n                  <Input\n                    type=\"number\"\n                    placeholder=\"Ex. 2\"\n                    {...register('generateYield')}\n                    name=\"generateYield\"\n                  />\n                  <InputError>{errors.generateYield?.message}</InputError>\n                </InputContainer>\n                <InputContainer>\n                  <Label htmlFor=\"generateLiquidity\">\n                    Transaction fee to generate liquidity (%){' '}\n                  </Label>\n                  <Input\n                    type=\"number\"\n                    placeholder=\"Ex. 2\"\n                    {...register('generateLiquidity')}\n                    name=\"generateLiquidity\"\n                  />\n                  <InputError>{errors.generateLiquidity?.message}</InputError>\n                </InputContainer>\n              </div>\n            )}\n            <InputContainer className=\"text-center\">\n              <PrimaryButton type=\"submit\">Mint Token</PrimaryButton>\n            </InputContainer>\n          </form>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default MintToken;\n"],"sourceRoot":""}