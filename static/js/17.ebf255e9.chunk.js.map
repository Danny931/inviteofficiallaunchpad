{"version":3,"sources":["components/common/Card/index.tsx","utils/index.tsx","components/common/CountdownTimer/index.tsx","components/layout/LaunchComponent/index.tsx","pages/Dashboard/Lock/LockLists/demo-lock-data.ts","pages/Dashboard/Lock/LockLists/LockDetails.tsx"],"names":["Card","styled","div","attrs","className","props","theme","colors","secondaryBackground","primaryText","CardIcon","secondaryRed","primaryRed","CardHeader","h3","CardSubHeader","CardBody","shortenAddress","address","start","substring","end","length","formatTimeStamp","date","parseInt","moment","format","formatNumberToCurrencyString","number","Intl","NumberFormat","calculateDuration","eventTime","duration","Math","max","floor","Date","now","Countdown","interval","useState","setDuration","timerRef","useRef","timerCallback","useCallback","useEffect","current","setInterval","clearInterval","days","hours","minutes","seconds","LaunchInfoText","p","tokenLocks","id","tokenName","tokenSymbol","tokenAddress","amountLocked","tokenDecimals","totalLocks","LockDetails","params","useParams","lock","setLock","currentLock","find","console","log"],"mappings":"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","file":"static/js/17.ebf255e9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\ninterface ICardTheme {\n  className?: string;\n}\n\nexport const Card = styled.div.attrs<ICardTheme>(() => ({\n  className: `shadow-lg py-8 px-5 rounded-md`,\n}))<ICardTheme>`\n  background: ${(props) => props.theme.colors.secondaryBackground};\n  border: 1px solid ${(props) => props.theme.colors.primaryText}20;\n\n  &.launch-card {\n    transition: all 0.3s ease;\n    cursor: pointer;\n    &:hover {\n      box-shadow: -1px 0px 16px 8px rgba(93, 0, 255, 0.2);\n      transform: scale(1.01);\n    }\n  }\n`;\n\nexport const CardIcon = styled.div.attrs<ICardTheme>(() => ({\n  className: `shadow flex py-8 px-5`,\n}))<ICardTheme>`\n  background: ${(props) => props.theme.colors.secondaryRed};\n  color: ${(props) => props.theme.colors.primaryRed};\n  border-radius: 10rem;\n  font-size: 2rem;\n  font-weight: bolder;\n  width: 70px;\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CardHeader = styled.h3.attrs<ICardTheme>(() => ({\n  className: `font-bold text-2xl md:text-3xl`,\n}))<ICardTheme>``;\n\nexport const CardSubHeader = styled.h3.attrs<ICardTheme>(() => ({\n  className: `font-bold text-base md:text-xl`,\n}))<ICardTheme>`\n  color: ${(props) => props.theme.colors.primaryText}80;\n`;\n\nexport const CardBody = styled.div.attrs<ICardTheme>(() => ({\n  className: `text-base mt-8`,\n}))<ICardTheme>``;\n","import moment from 'moment';\n\nexport const shortenAddress = (address: string): string => {\n  let start = address.substring(0, 6);\n  let end = address.substring(address.length - 1 - 3, address.length);\n  const result = `${start}....${end}`;\n  return result;\n};\nexport const formatTimeStamp = (date: string) =>\n  parseInt(moment(date).format('x'), 10);\n\nexport const formatNumberToCurrencyString = (number: number) =>\n  new Intl.NumberFormat().format(number);\n","import moment from 'moment';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nconst calculateDuration = (eventTime: number) =>\n  moment.duration(\n    Math.max(eventTime - Math.floor(Date.now() / 1000), 0),\n    'seconds'\n  );\n\nexport function Countdown({\n  eventTime,\n  interval,\n}: {\n  eventTime: number;\n  interval?: number;\n}) {\n  const [duration, setDuration] = useState(calculateDuration(eventTime));\n  const timerRef = useRef(0);\n  const timerCallback = useCallback(() => {\n    setDuration(calculateDuration(eventTime));\n  }, [eventTime]);\n\n  useEffect(() => {\n    timerRef.current = setInterval(timerCallback, interval);\n\n    return () => {\n      clearInterval(timerRef.current);\n    };\n  }, [eventTime]);\n\n  return (\n    <div className=\"font-bold text-sm\">\n      {duration.days()} Days {duration.hours()} Hrs {duration.minutes()} Mins{' '}\n      {duration.seconds()} Secs\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const LaunchInfoText = styled.p.attrs(() => ({\n  className: `flex justify-between`,\n}))`\n  span {\n    font-weight: bold;\n    opacity: 0.8;\n    font-size: 0.9rem;\n    overflow-wrap: anywhere;\n  }\n`;\n","export const tokenLocks = [\n  {\n    id: 1,\n    tokenName: 'King Inu(TestData)',\n    tokenSymbol: 'KINU',\n    tokenAddress: '0xB872057eE478B3eb77E74c9aA7B50Fe4Ed650e58',\n    amountLocked: '25, 000, 000',\n    tokenDecimals: 9,\n    totalLocks: 2,\n    date: '2024-08-01 18:06:03',\n  },\n  {\n    id: 1,\n    tokenName: 'Cake Locks(TestData)',\n    tokenSymbol: 'CALS',\n    tokenAddress: '0xB872057eE478B3eb77E74c9aA7B50Fe4Ed650e58',\n    amountLocked: '25, 000, 000',\n    tokenDecimals: 9,\n    totalLocks: 2,\n    date: '2024-08-02 18:06:03',\n  },\n];\n\nexport interface TokenLocksType {\n  id: number;\n  tokenName: string;\n  tokenSymbol: string;\n  tokenAddress: string;\n  amountLocked: string;\n  tokenDecimals: number;\n  totalLocks: number;\n  date: string;\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Card,\n  CardHeader,\n  CardSubHeader,\n} from '../../../../components/common/Card';\nimport { Countdown } from '../../../../components/common/CountdownTimer';\nimport { LaunchInfoText } from '../../../../components/layout/LaunchComponent';\nimport { formatTimeStamp } from '../../../../utils';\nimport { tokenLocks } from './demo-lock-data';\n\nconst LockDetails = () => {\n  const params = useParams();\n  const [lock, setLock] = useState<any>();\n  useEffect(() => {\n    if (params && params.id) {\n      const id = params.id;\n      const currentLock = tokenLocks.find((lock) => lock.id === parseInt(id));\n      setLock(currentLock);\n    }\n    console.log(params.id);\n  }, [params]);\n\n  if (!lock) return null;\n\n  return (\n    <div className=\"flex flex-col md:flex-row space-y-5 md:space-y-0 space-x-0 md:space-x-5 pt-20\">\n      {/* <Card\n        style={{ height: 'fit-content' }}\n        className=\"w-full md:w-1/3 md:sticky md:top-1\"\n      >\n        <CardSubHeader>{lock.tokenSymbol} Records</CardSubHeader>\n      </Card> */}\n      <Card className=\"w-full md:w-2/3 mx-auto\">\n        <div className=\"mb-8\">\n          <h3 className=\"pb-3 font-bold\">Lock Info</h3>\n          <hr />\n        </div>\n        <div className=\"space-y-4\">\n          <LaunchInfoText>\n            Token Address: <span>{lock.tokenAddress}</span>\n          </LaunchInfoText>\n          <LaunchInfoText>\n            Token Name: <span>{lock.tokenName}</span>\n          </LaunchInfoText>\n          <LaunchInfoText>\n            Token Symbol: <span>{lock.tokenSymbol}</span>\n          </LaunchInfoText>\n          <LaunchInfoText>\n            Amount Locked: <span>{lock.amountLocked}</span>\n          </LaunchInfoText>\n          <LaunchInfoText>\n            Total Locks: <span>{lock.totalLocks}</span>\n          </LaunchInfoText>\n          <LaunchInfoText>\n            Lock Timer: <Countdown eventTime={formatTimeStamp(lock.date)} />\n          </LaunchInfoText>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default LockDetails;\n"],"sourceRoot":""}